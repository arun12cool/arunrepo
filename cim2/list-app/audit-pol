#!/bin/bash

> outt

for acc_id in `cat acc.txt`
do
   temp_role=$(aws sts assume-role --role-arn arn:aws:iam::$acc_id:role/fusion_app --role-session-name "user-details")
    export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
    export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
    export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)

	for role in `cat role`
	do

	echo $role

		r=(`aws iam list-attached-role-policies --role-name $role | grep PolicyArn | awk -F " " '{print $2}' | tr -d '"'`)



		for pol in "${r[@]}"
    	do

			s3=`aws iam get-policy-version --policy-arn $pol --version-id $(aws iam get-policy --policy-arn $pol --query 'Policy.DefaultVersionId' --output text) | grep "s3:" | tr -d '",'`
			if [ ! -z "$s3" ]; then  echo $acc_id "|" $role "|" $pol "|" $s3 >> outt; fi


			rds=`aws iam get-policy-version --policy-arn $pol --version-id $(aws iam get-policy --policy-arn $pol --query 'Policy.DefaultVersionId' --output text) | grep  "rds:" | tr -d '",'`

			if [ ! -z "$rds" ]; then  echo $acc_id "|" $role "|" $pol "|" $rds >> outt; fi

		done

		l=(`aws iam list-role-policies --role-name $role --query PolicyNames[] --output text`)

		for p in "${l[@]}"
    	do

			s=`aws iam get-role-policy --role-name $role --policy-name $p --output text |  grep "s3:" |  tr -d '",'`
			if [ ! -z "$s" ]; then echo $acc_id "|" $role "|" $p "|" $s >> out; fi

			r=`aws iam get-role-policy --role-name $role --policy-name $p --output text |  grep "rds:" |  tr -d '",'`
			if [ ! -z "$r" ]; then  echo $acc_id "|" $role "|" $p "|" $r >> outt; fi

		done


	done
done
